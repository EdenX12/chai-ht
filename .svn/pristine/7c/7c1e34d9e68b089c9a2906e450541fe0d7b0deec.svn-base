<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tian.sakura.cdd.db.dao.taskLine.TaskLineMapper">
  <resultMap id="BaseResultMap" type="com.tian.sakura.cdd.db.domain.taskLine.TaskLine">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="total_task" jdbcType="INTEGER" property="totalTask" />
    <result column="received_task" jdbcType="INTEGER" property="receivedTask" />
    <result column="line_status" jdbcType="INTEGER" property="lineStatus" />
    <result column="line_order" jdbcType="INTEGER" property="lineOrder" />
    <result column="order_product_id" jdbcType="VARCHAR" property="orderProductId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, product_id, total_task, received_task, line_status, line_order, create_time, 
    update_time,order_product_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from s_task_line
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from s_task_line
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByProductId">
      delete from s_task_line
    where product_id = #{productId}
    </delete>
    <insert id="insert" parameterType="com.tian.sakura.cdd.db.domain.taskLine.TaskLine">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_task_line (id, product_id, total_task, 
      received_task, line_status, line_order, 
      create_time, update_time)
    values (#{id,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{totalTask,jdbcType=INTEGER}, 
      #{receivedTask,jdbcType=INTEGER}, #{lineStatus,jdbcType=INTEGER}, #{lineOrder,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tian.sakura.cdd.db.domain.taskLine.TaskLine">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_task_line
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="totalTask != null">
        total_task,
      </if>
      <if test="receivedTask != null">
        received_task,
      </if>
      <if test="lineStatus != null">
        line_status,
      </if>
      <if test="lineOrder != null">
        line_order,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="totalTask != null">
        #{totalTask,jdbcType=INTEGER},
      </if>
      <if test="receivedTask != null">
        #{receivedTask,jdbcType=INTEGER},
      </if>
      <if test="lineStatus != null">
        #{lineStatus,jdbcType=INTEGER},
      </if>
      <if test="lineOrder != null">
        #{lineOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tian.sakura.cdd.db.domain.taskLine.TaskLine">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_task_line
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="totalTask != null">
        total_task = #{totalTask,jdbcType=INTEGER},
      </if>
      <if test="receivedTask != null">
        received_task = #{receivedTask,jdbcType=INTEGER},
      </if>
      <if test="lineStatus != null">
        line_status = #{lineStatus,jdbcType=INTEGER},
      </if>
      <if test="settleStatus != null">
        settle_status = #{settleStatus,jdbcType=INTEGER},
      </if>
      <if test="lineOrder != null">
        line_order = #{lineOrder,jdbcType=INTEGER},
      </if>
      <if test="orderProductId != null">
        order_product_id = #{orderProductId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tian.sakura.cdd.db.domain.taskLine.TaskLine">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_task_line
    set product_id = #{productId,jdbcType=VARCHAR},
      total_task = #{totalTask,jdbcType=INTEGER},
      received_task = #{receivedTask,jdbcType=INTEGER},
      line_status = #{lineStatus,jdbcType=INTEGER},
      line_order = #{lineOrder,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!-- 按照时间升序查找指定产品，未满的任务线 -->
  <select id="selectByProductIdForDispatch"  resultMap="BaseResultMap">
    select *
    from s_task_line
    where product_id = #{productId}
    <if test="lineOrder != null">
      and line_order <![CDATA[>=]]> #{lineOrder}
    </if>
    and line_status = 0
    and settle_status = 0
    order by line_order asc
    <if test="taskCnt != null">
      limit #{taskCnt}
    </if>

  </select>
  
  <select id="getFulleTaskLineCntByProductId" parameterType="string" resultType="java.lang.Integer" >
      select count(1)
      from s_task_line
      where line_status = 1
            and product_id = #{productId}
  </select>

  <!-- 查询待结算的商品任务线 -->
  <select id="getSettleTaskLineByProductId"  resultMap="BaseResultMap">
      select id, product_id, total_task, received_task, line_status, line_order
      from s_task_line
      where line_status = 0
            and product_id = #{productId}
            <if test="list != null">
              and id not in
              <foreach collection="list" item="item" separator="," open="(" close=")">
                #{item}
              </foreach>
            </if>
            order by line_order asc
            limit #{taskLineCnt}
  </select>


  <!-- 根据商品id  -->
  <select id="receivedTaskCntByProductId" parameterType="string" resultType="java.lang.Integer" >
      select received_task
      from s_task_line
      where line_status = '0'
            and product_id = #{productId}
            and  settle_status = 0
      order by line_order
      limit 1
  </select>
  
  <!-- 根据任务id  -->
  <select id="receivedTaskCntByTaskId" parameterType="string" resultType="java.lang.Integer" >
      select received_task
      from s_task_line
      where line_status = '0'
            and id = #{taskId}
  </select>
  
  <!-- 根据状态查询  -->
  <select id="getTaskLineByStatus"  resultType="java.lang.Integer" >
      select count(*)
      from s_task_line
      where line_status = #{lineStatus}
            and product_id = #{productId}
            and settle_status = #{settleStatus}
  </select>
  <select id="getLineNumberByPorduct" resultType="java.lang.Integer">
    select count(*) from s_task_line where product_id = #{productId}
  </select>

  <!-- 根据订单id更新任务线结算状态 -->
  <update id="updateSettleStatusByOrderId">
    update s_task_line
    set settle_status = #{settleStatus}
    where order_product_id = #{orderProductId}
  </update>
</mapper>