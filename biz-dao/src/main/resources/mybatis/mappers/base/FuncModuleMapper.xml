<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tian.sakura.cdd.db.dao.base.FuncModuleMapper">
    <resultMap id="BaseResultMap" type="com.tian.sakura.cdd.db.domain.base.FuncModule">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="module_name" jdbcType="VARCHAR" property="moduleName"/>
        <result column="module_url" jdbcType="VARCHAR" property="moduleUrl"/>
        <result column="s_order" jdbcType="INTEGER" property="sOrder"/>
        <result column="jump_url" jdbcType="VARCHAR" property="jumpUrl"/>
        <result column="module_status" jdbcType="INTEGER" property="moduleStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_user" jdbcType="INTEGER" property="createUser"/>
        <result column="update_user" jdbcType="INTEGER" property="updateUser"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, module_name, module_url, s_order, jump_url, module_status, create_time, update_time,
        create_user, update_user
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from s_func_module
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectAllPublished" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_func_module
        where module_status = 1
        order by s_order asc
    </select>
    <select id="listFuncModule" resultType="com.tian.sakura.cdd.db.domain.base.FuncModule">
        select
        <include refid="Base_Column_List"/>
        from s_func_module
        where module_status != '3'
        <if test="moduleName != null and moduleName != ''">
            and module_name like concat('%', #{moduleName}, '%')
        </if>
        <if test="moduleStatus != null">
            and module_status = #{moduleStatus}
        </if>
        order by create_time desc
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from s_func_module
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteFuncModule">
      update s_func_module set module_status = '3' where id = #{id}
    </delete>
    <insert id="insert" parameterType="com.tian.sakura.cdd.db.domain.base.FuncModule">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into s_func_module (id, module_name, module_url,
        s_order, jump_url, module_status,
        create_time, update_time, create_user,
        update_user)
        values (#{id,jdbcType=VARCHAR}, #{moduleName,jdbcType=VARCHAR}, #{moduleUrl,jdbcType=VARCHAR},
        #{sOrder,jdbcType=INTEGER}, #{jumpUrl,jdbcType=VARCHAR}, #{moduleStatus,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER},
        #{updateUser,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.tian.sakura.cdd.db.domain.base.FuncModule">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into s_func_module
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="moduleName != null">
                module_name,
            </if>
            <if test="moduleUrl != null">
                module_url,
            </if>
            <if test="sOrder != null">
                s_order,
            </if>
            <if test="jumpUrl != null">
                jump_url,
            </if>
            <if test="moduleStatus != null">
                module_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="moduleName != null">
                #{moduleName,jdbcType=VARCHAR},
            </if>
            <if test="moduleUrl != null">
                #{moduleUrl,jdbcType=VARCHAR},
            </if>
            <if test="sOrder != null">
                #{sOrder,jdbcType=INTEGER},
            </if>
            <if test="jumpUrl != null">
                #{jumpUrl,jdbcType=VARCHAR},
            </if>
            <if test="moduleStatus != null">
                #{moduleStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tian.sakura.cdd.db.domain.base.FuncModule">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update s_func_module
        <set>
            <if test="moduleName != null">
                module_name = #{moduleName,jdbcType=VARCHAR},
            </if>
            <if test="moduleUrl != null">
                module_url = #{moduleUrl,jdbcType=VARCHAR},
            </if>
            <if test="sOrder != null">
                s_order = #{sOrder,jdbcType=INTEGER},
            </if>
            <if test="jumpUrl != null">
                jump_url = #{jumpUrl,jdbcType=VARCHAR},
            </if>
            <if test="moduleStatus != null">
                module_status = #{moduleStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tian.sakura.cdd.db.domain.base.FuncModule">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update s_func_module
        set module_name = #{moduleName,jdbcType=VARCHAR},
        module_url = #{moduleUrl,jdbcType=VARCHAR},
        s_order = #{sOrder,jdbcType=INTEGER},
        jump_url = #{jumpUrl,jdbcType=VARCHAR},
        module_status = #{moduleStatus,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=INTEGER},
        update_user = #{updateUser,jdbcType=INTEGER}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>